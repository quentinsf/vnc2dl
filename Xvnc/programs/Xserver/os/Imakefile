XCOMM $XConsortium: Imakefile /main/84 1996/12/15 21:26:59 rws $
XCOMM $XFree86: xc/programs/Xserver/os/Imakefile,v 3.18.2.2 1998/02/21 06:07:15 robin Exp $
#include <Server.tmpl>

/*
 * If you have any extra files to be put into the library, define them here.
 */

#ifdef HPArchitecture
#define OtherSources hpsocket.c 
#define OtherObjects hpsocket.o
#endif

#ifdef AmoebaArchitecture
#define OtherSources iopreader.c
#define OtherObjects iopreader.o
#endif

/*
 * do not modify the following two definitions
 */

#ifndef OtherSources
#define OtherSources
#endif

#ifndef OtherObjects
#define OtherObjects
#endif

#if HasXdmAuth
XDMAUTHDEFS = -DHASXDMAUTH
XDMAUTHOBJS = xdmauth.o
XDMAUTHSRCS = xdmauth.c
#else
XDMAUTHDEFS = 
XDMAUTHOBJS =
XDMAUTHSCRS =
#endif

#if HasSecureRPC
RPCDEFS = -DSECURE_RPC
RPCOBJS = rpcauth.o
RPCSRCS = rpcauth.c
#else
RPCDEFS =
RPCOBJS =
RPCSRCS =
#endif

#if HasKrb5
KRB5OBJS = k5auth.o k5encode.o
KRB5SRCS = k5auth.c k5encode.c
#endif

#if HasBSD44Sockets
   SOCK_DEFINES = -DBSD44SOCKETS
#endif

#if BuildLBX
   LBX_SRCS = lbxio.c
   LBX_OBJS = lbxio.o
#else
   LBX_SRCS =
   LBX_OBJS =
#endif

BOOTSTRAPCFLAGS = 
           SRCS = WaitFor.c access.c connection.c io.c oscolor.c \
                  osinit.c utils.c auth.c mitauth.c secauth.c $(XDMAUTHSRCS) \
                  $(RPCSRCS) $(KRB5SRCS) xdmcp.c decompress.c OtherSources \
                  transport.c xalloc.c $(LBX_SRCS)
           OBJS = WaitFor.o access.o connection.o io.o oscolor.o \
                  osinit.o utils.o auth.o mitauth.o secauth.o $(XDMAUTHOBJS) \
                  $(RPCOBJS) $(KRB5OBJS) xdmcp.o decompress.o OtherObjects \
                  transport.o xalloc.o $(LBX_OBJS)

#if SpecialMalloc
     MEM_DEFINES = -DSPECIAL_MALLOC
#endif /* SpecialMalloc */
#if UseInternalMalloc
     MEM_DEFINES = -DINTERNAL_MALLOC
#endif
#if UseMemLeak
     MEM_DEFINES = -DMEMBUG
#endif
#if UseRgbTxt
    RGB_DEFINES = -DUSE_RGB_TXT
#endif
    DBM_DEFINES = NdbmDefines
    ADM_DEFINES = -DADMPATH=\"$(ADMDIR)/X\%smsgs\"
    EXT_DEFINES = ExtensionDefines
  XDMCP_DEFINES = ServerXdmcpDefines
     OS_DEFINES = ServerOSDefines
   KRB5_DEFINES = Krb5Defines
        DEFINES = -DXSERV_t -DTRANS_SERVER ConnectionFlags $(MEM_DEFINES) $(XDMAUTHDEFS) $(RPCDEFS) $(SIGNAL_DEFINES) $(OS_DEFINES) $(KRB5_DEFINES) $(RGB_DEFINES)
       INCLUDES = -I.  -I../include -I$(XINCLUDESRC) -I$(EXTINCSRC) -I$(TOP)/lib/Xau -I../lbx Krb5Includes
 DEPEND_DEFINES = $(DBM_DEFINES) $(XDMCP_DEFINES) $(EXT_DEFINES) $(TRANS_INCLUDES) ConnectionFlags
       LINTLIBS = ../dix/llib-ldix.ln

#ifdef NEED_ALLOCA_FROM_LIBPW
          PWLIB = /lib/libPW.a
#endif /* NEED_ALLOCA_FROM_LIBPW */

NormalLibraryObjectRule()
NormalLibraryTarget(os,$(OBJS))
LintLibraryTarget(os,$(SRCS))
NormalLintTarget($(SRCS))

#ifdef NEED_ALLOCA_FROM_LIBPW
XCOMM
XCOMM And this one is to get the version of alloca that lives in /lib/libPW.a
XCOMM without getting all of the rest of the stuff in there.
XCOMM
alloca.o:  $(PWLIB)
	rm -f alloca.o
	ar x $(PWLIB) alloca.o
#endif /* NEED_ALLOCA_FROM_LIBPW */

SpecialCObjectRule(access,$(ICONFIGFILES),$(SOCK_DEFINES) $(XDMCP_DEFINES))
SpecialCObjectRule(auth,$(ICONFIGFILES),$(XDMCP_DEFINES))
SpecialCObjectRule(xdmauth,$(ICONFIGFILES),$(XDMCP_DEFINES))
SpecialCObjectRule(xdmcp,$(ICONFIGFILES),$(SOCK_DEFINES) $(XDMCP_DEFINES))
SpecialCObjectRule(connection,$(ICONFIGFILES),$(SOCK_DEFINES) $(XDMCP_DEFINES))
SpecialCObjectRule(transport,$(ICONFIGFILES),$(TRANS_INCLUDES) $(CONN_DEFINES) $(SOCK_DEFINES))
LinkSourceFile(transport.c,$(TRANSCOMMSRC))
SpecialCObjectRule(osinit,$(ICONFIGFILES),$(ADM_DEFINES))
SpecialCObjectRule(WaitFor,$(ICONFIGFILES),$(EXT_DEFINES))
SpecialCObjectRule(io,$(ICONFIGFILES),$(EXT_DEFINES))
#if BuildLBX
SpecialCObjectRule(lbxio,$(ICONFIGFILES),$(EXT_DEFINES))
#endif
SpecialCObjectRule(utils,$(ICONFIGFILES),$(XDMCP_DEFINES) $(EXT_DEFINES))
SpecialCObjectRule(xalloc,$(ICONFIGFILES),NullParameter)
#if defined(SparcArchitecture) && HasGcc && !HasGcc2
oscolor.o: oscolor.c $(ICONFIGFILES)
	$(RM) $@
	cc -c $(DBM_DEFINES) $(CDEBUGFLAGS) $(ALLDEFINES) $*.c
#else
SpecialCObjectRule(oscolor,$(ICONFIGFILES),$(DBM_DEFINES))
#endif

#if UseXserverWrapper
AllTarget(wrapper.o)

       WRAPPER_DEFINES = -DXSERVER_PATH=\"$(BINDIR)/X\"

SpecialCObjectRule(wrapper,NullParameter,$(WRAPPER_DEFINES))
#endif

#if HasKrb5
LinkSourceFile(k5encode.c,$(XAUTHSRC))
#endif

InstallLinkKitLibrary(os,$(LINKKITDIR)/lib)

DependTarget()
