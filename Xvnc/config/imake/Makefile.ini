# $TOG: Makefile.ini /main/25 1997/02/19 18:00:59 mgreess $
#
#   WARNING    WARNING    WARNING    WARNING    WARNING    WARNING    WARNING
#
# This is NOT an automatically generated Makefile!  It is hand-crafted as a 
# bootstrap, may need editing for your system.  The BOOTSTRAPCFLAGS variable
# may be given at the top of the build tree for systems that do not define
# any machine-specific preprocessor symbols.
#
# $XFree86: xc/config/imake/Makefile.ini,v 3.4.2.1 1997/06/11 12:08:33 dawes Exp $

BOOTSTRAPCFLAGS = 
CC = cc
CDEBUGFLAGS = -O
INCLUDES = -I../../include -I../../imports/x11/include/X11
CFLAGS = $(BOOTSTRAPCFLAGS) $(CDEBUGFLAGS) $(INCLUDES)
SHELL = /bin/sh
RM = rm -f
MV = mv
MAKE = make
RM_CMD = $(RM) *.CKP *.ln *.BAK *.bak *.o core errs ,* *~ *.a \
	 tags TAGS make.log
NPROC = 1

imake::
	@echo "making imake with BOOTSTRAPCFLAGS=$(BOOTSTRAPCFLAGS) in config/imake"

imake:: imake.o
	$(CC) -o imake $(CFLAGS) imake.o

imake.o: ccimake imake.c
	$(CC) -c $(CFLAGS) `./ccimake` imake.c

ccimake: ccimake.c
	$(CC) -o ccimake $(CFLAGS) ccimake.c

# a derived object erroneously would get shared across platforms by clearmake
.NO_CONFIG_REC: ccimake

bootstrap:
	-@if [ -d bootstrap ]; then exit 0; else set -x; mkdir bootstrap; fi
	$(MV) *.o imake bootstrap

relink:
	$(RM) imake
	$(MAKE) $(MFLAGS) imake

clean:
	$(RM) ccimake imake.o imake
	$(RM_CMD) \#*
	$(RM) -r Makefile.proto Makefile Makefile.dep bootstrap

depend:

imake.exe::
	@echo making imake with BOOTSTRAPCFLAGS=-DWIN32

imake.exe:: imake.obj
	cl -nologo imake.obj libc.lib kernel32.lib

imake.obj: imake.c
	cl -nologo -W2 -D__STDC__ -c -DWIN32 $(CFLAGS) imake.c

clean.Win32:
	if exist imake.exe del imake.exe
	if exist imake.obj del imake.obj

clean.os2:
	imakesvc 4 imake imake.exe imake.o /imake.exe

imake.os2: imake.c
	$(CC) -DBSD43 $(CFLAGS) -o imake.exe imake.c
	copy imake.exe \\ 
